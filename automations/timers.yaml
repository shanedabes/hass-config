---
# start timer when tag is scanned
- id: nfc_timer_start
  alias: Start timers using nfc tags
  mode: single
  max_exceeded: silent

  variables:
    tags:
      washing_machine_timer: "timer.washing_machine"
      dryer_mixed_load_timer: "timer.dryer_mixed_load"

  trigger:
    platform: event
    event_type: tag_scanned

  condition:
    - "{{ trigger.event.data.tag_id in tags }}"

  action:
    - variables:
        timer_id: "{{ tags[trigger.event.data.tag_id] }}"

    - service: timer.start
      data:
        entity_id: "{{ timer_id }}"

- id: timer_finished
  alias: Timer finished
  mode: single
  max_exceeded: silent

  variables:
    timers:
      timer.washing_machine:
        summary: Washing machine finished
        icon: washing-machine.png
        urgency: critical
      timer.dryer_mixed_load:
        summary: Dryer finished
        icon: tumble-dryer.png

  trigger:
    platform: event
    event_type: timer.finished

  condition:
    - "{{ trigger.event.data.entity_id in timers }}"

  action:
    - variables:
        timer_dict: "{{ timers[trigger.event.data.entity_id] }}"

    - service: rest_command.wigeon_notify
      data:
        summary: "{{ timer_dict.summary }}"
        body: "{{ timer_dict.body }}"
        icon: "{{ timer_dict.icon }}"
        urgency: "{{ timer_dict.urgency }}"

    - service: notify.mobile_app_wren
      data:
        message: "{{ timer_dict.summary }}"
        data:
          vibrationPattern: "0, 1000, 100, 1000"

    - service: notify.tv
      data:
        message: "{{ timer_dict.summary }}"

- id: bedtime_heating
  alias: Turn off heating at bedtime after a delay
  mode: single

  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.bedtime_heating

  action:
    - service: climate.set_temperature
      entity_id: climate.bedroom
      data:
        temperature: 12
